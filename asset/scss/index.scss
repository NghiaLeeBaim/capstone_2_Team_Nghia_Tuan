@use "./base/component.scss";

@use "./base/base.scss";



// -------------------- poster-carousel-----------------

.poster-carousel {
  height: 600px;
  margin-top: 0px;

  .container {
    background-image: url(/asset/img/background-carousel.jpg);
    background-size: cover;
    display: flex;
    width: 100%;
    height: 580px;
    justify-content: space-between;
    .image-carousel {
      margin-top: 50px;
      margin-right: 50px;
      width: 35%;
      img {
        width: 800px;
        transition: 0.5s;
        cursor: pointer;
        &:hover {
          transition: 0.5s;
          transform: rotate(20deg);
        }
      }
    }
    .content-carousel {
      width: 50%;
      margin-top: 100px;
      line-height: 1.2;
      margin-left: 20px;
      span {
        font-size: 60px;
        font-weight: 600;
      }
      p {
        margin-top: 20px;
        font-size: 23px;
        color: white;
      }
      button {
        margin-top: 20px;
        margin-left: 50px;
        color: white;
        border-radius: 8px;
        border: 3px solid white;
        height: 50px;
        width: 150px;
        cursor: pointer;
        transition: all 0.75s;
        font-size: 20px;
        span {
          font-size: 25px;
        }
        &:hover {
          font-size: 23px;
          transition: all 0.75s;
        }
      }
    }
  }
}

/*
 * Animation module with all animation code
 */
.anim-text-flow,
.anim-text-flow-hover:hover {
  /*
    * Animation variables
    */
  $animationSteps: 20;
  $animationDuration: 50;
  $animationElement: span;
  $animationElementsCount: 100;
  $delayBetweenLetters: 0.2;

  /*
    * Elements settings
    */
  #{$animationElement} {
    animation-name: anim-text-flow-keys;
    animation-duration: #{$animationDuration}s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-fill-mode: forwards;
  }

  /*
    * Keyframe loop
    */
  @keyframes anim-text-flow-keys {
    @for $i from 0 through $animationSteps {
      #{percentage($i * (1 / $animationSteps))} {
        color: hsla(random(365), 60, 60, 1);
      }
    }
  }

  /*
    * Element animation delay loop
    */
  $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

  @for $i from 1 through $animationElementsCount {
    #{$animationElement}:nth-of-type(#{$i}) {
      animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
    }
  }
}

.txt {
  display: block;
}

@import url(https://fonts.googleapis.com/css?family=Ubuntu:300);

.btn-2 {
  background: rgb(96, 9, 240);
  background: linear-gradient(
    0deg,
    rgba(96, 9, 240, 1) 0%,
    rgba(129, 5, 240, 1) 100%
  );
  border: none;
}
.btn-2:before {
  height: 0%;
  width: 2px;
}
.btn-2:hover {
  box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),
    -4px -4px 6px 0 rgba(116, 125, 136, 0.5),
    inset -4px -4px 6px 0 rgba(255, 255, 255, 0.2),
    inset 4px 4px 6px 0 rgba(0, 0, 0, 0.4);
}


